name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

  deploy:
    name: Build Docker Image and Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cgv-clone:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/cgv-clone:${{ github.sha }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Docker 네트워크 생성 (없으면)
            docker network create cgv-network 2>/dev/null || true
            
            # 기존 컨테이너 정리
            docker stop cgv-app redis 2>/dev/null || true
            docker rm cgv-app redis 2>/dev/null || true
            
            # Docker 이미지 Pull
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cgv-clone:latest
            
            # Redis 컨테이너 실행
            docker run -d \
              --name redis \
              --network cgv-network \
              -p 6379:6379 \
              redis:7-alpine
            
            # 애플리케이션 컨테이너 실행
            docker run -d \
              --name cgv-app \
              --network cgv-network \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=docker \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e REDIS_HOST=redis \
              -e REDIS_PORT=6379 \
              -e REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e PAYMENT_API_SECRET=${{ secrets.PAYMENT_API_SECRET }} \
              -e PAYMENT_STORE_ID=${{ secrets.PAYMENT_STORE_ID }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/cgv-clone:latest
            
            # 컨테이너 시작 대기 및 로그 확인
            echo "Waiting for application to start..."
            sleep 10
            docker logs cgv-app --tail 50